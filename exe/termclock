#!/usr/bin/env ruby
require 'termclock'

$-v = true

begin
	print "\e[?25l"

	arg_col = ARGV.find { |x| x[/\A\-(\-colour|\-color|c|)=.*\z/] } &.split(?=) &.at(1) &.split(?,)

	colours = if arg_col
		abort("4 colours are needed. Example: -c=f55,55f,55f,3eb") if arg_col.length != 4
		arg_col
	else
		%w(ff5555 5555ff 5555ff 33eebb)
	end

	colours.map! { |x|
		begin
			Termclock.hex2rgb(x)
		rescue ArgumentError
			abort $!.to_s
		end
	}

	chars = ARGV.find { |x| x[/\A\-(\-character|char)=.*\z/] } &.split(?=) &.at(1)
	Termclock::ParseCharacters.transform_characters!(*chars) if chars

	_refresh_time = ARGV.find { |x| x[/\A\-(\-refresh|r)=.*\z/] } &.split(?=) &.at(1)
	refresh_time = _refresh_time ? _refresh_time.to_f : 0.1

	text_colours = ARGV.find { |x| x[/\A\-(\-text\-colour|tc)=.*\z/] } &.split(?=) &.at(1) &.split(?,)
	abort("Text colours need 2 colours. Example: -tc=55f,3ce3b5") if text_colours && text_colours.length != 2

	bold = ARGV.any? { |x| x[/\A\-\-bold\z/] }
	no_print_info = ARGV.any? { |x| x[/\A\-(\-no\-sysinfo|ni)\z/] }

	Termclock.start(*colours, *text_colours, sleep: refresh_time, bold: bold, print_info: !no_print_info)
rescue Interrupt, SignalException
	print "\e[H\e[2J\e[3J"
ensure
	print "\e[?25h"
end
